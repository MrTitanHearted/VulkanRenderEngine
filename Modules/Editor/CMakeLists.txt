cmake_minimum_required(VERSION 3.20)

project(VulkanRenderEngineEditor LANGUAGES CXX VERSION 0.0.1)

set(VULKAN_RENDER_ENGINE_ASSETS_SOURCE_DIR ${CMAKE_SOURCE_DIR}/Assets)

if(MSVC)
    set(VULKAN_RENDER_ENGINE_ASSETS_DESTINATION_DIR ${CMAKE_BINARY_DIR}/$<CONFIG>/Assets)
else()
    set(VULKAN_RENDER_ENGINE_ASSETS_DESTINATION_DIR ${CMAKE_BINARY_DIR}/Assets)
endif()

file(COPY_FILE ${CMAKE_SOURCE_DIR}/.clang-format ${CMAKE_BINARY_DIR}/.clang-format)

file(GLOB_RECURSE VULKAN_RENDER_ENGINE_EDITOR_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/Include/*.hpp)
file(GLOB_RECURSE VULKAN_RENDER_ENGINE_EDITOR_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/Source/*.cpp)

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${VULKAN_RENDER_ENGINE_EDITOR_HEADERS} ${VULKAN_RENDER_ENGINE_EDITOR_SOURCES})

add_executable(VREditor ${VULKAN_RENDER_ENGINE_EDITOR_HEADERS} ${VULKAN_RENDER_ENGINE_EDITOR_SOURCES})

target_include_directories(VREditor PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/Include)
target_link_libraries(VREditor PRIVATE VulkanRenderEngine::VulkanRenderEngine)

if(WIN32)
    if(MSVC)
        set_target_properties(VREditor PROPERTIES WIN32_EXECUTABLE $<$<CONFIG:Release>:TRUE>)
    elseif(CMAKE_BUILD_TYPE MATCHES Release)
        set_target_properties(VREditor PROPERTIES WIN32_EXECUTABLE TRUE)
    endif()
endif()

if(MSVC)
    set_property(DIRECTORY ${CMAKE_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT VREditor)
endif()

find_program(SLANGC_EXECUTABLE slangc REQUIRED)

if(NOT SLANGC_EXECUTABLE)
    message(FATAL_ERROR "Slang compiler not found. Install slangc and add it to PATH.")
endif()

file(GLOB_RECURSE VULKAN_RENDER_ENGINE_SHADERS ${VULKAN_RENDER_ENGINE_ASSETS_SOURCE_DIR}/Shaders/*.slang)

foreach(SHADER_FILE ${VULKAN_RENDER_ENGINE_SHADERS})
    get_filename_component(FILE_NAME_WE ${SHADER_FILE} NAME_WE)
    get_filename_component(FILE_PATH ${SHADER_FILE} PATH)

    set(SPIRV ${FILE_PATH}/${FILE_NAME_WE}.spv)

    add_custom_command(
        OUTPUT ${SPIRV}
        COMMAND ${SLANGC_EXECUTABLE} -I ${VULKAN_RENDER_ENGINE_ASSETS_SOURCE_DIR}/Shaders ${SHADER_FILE} -target spirv -o ${SPIRV}
        DEPENDS ${SHADER_FILE}
    )
    list(APPEND SPIRV_BINARY_FILES ${SPIRV})
endforeach()

if(MSVC)
    set(MSVC_COPY_VULKAN_RENDER_ENGINE_ASSETS COMMAND ${CMAKE_COMMAND} -E copy_directory_if_different ${VULKAN_RENDER_ENGINE_ASSETS_SOURCE_DIR} ${CMAKE_BINARY_DIR}/Modules/Editor/Assets)
else()
    set(MSVC_COPY_VULKAN_RENDER_ENGINE_ASSETS)
endif()

add_custom_target(Assets ALL
    COMMAND ${CMAKE_COMMAND} -E copy_directory_if_different ${VULKAN_RENDER_ENGINE_ASSETS_SOURCE_DIR} ${VULKAN_RENDER_ENGINE_ASSETS_DESTINATION_DIR}
    ${MSVC_COPY_VULKAN_RENDER_ENGINE_ASSETS}
    DEPENDS ${SPIRV_BINARY_FILES} ${VULKAN_RENDER_ENGINE_ASSETS_SOURCE_DIR}
    COMMENT "Copying '${VULKAN_RENDER_ENGINE_ASSETS_SOURCE_DIR}' folder to '${VULKAN_RENDER_ENGINE_ASSETS_DESTINATION_DIR}'"
)

add_dependencies(VREditor Assets)

file(GLOB_RECURSE VULKAN_RENDER_ENGINE_ASSETS ${VULKAN_RENDER_ENGINE_ASSETS_SOURCE_DIR}/*)
source_group(TREE ${CMAKE_SOURCE_DIR}/Assets PREFIX Assets FILES ${VULKAN_RENDER_ENGINE_ASSETS})
target_sources(VREditor PRIVATE ${VULKAN_RENDER_ENGINE_ASSETS})
target_sources(Assets PRIVATE ${VULKAN_RENDER_ENGINE_ASSETS})